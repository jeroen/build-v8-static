on:
  push:

name: Building V8

jobs:
  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.distro }} / v8-${{ matrix.version }}

    strategy:
      fail-fast: false
      matrix:
        distro: [ 'centos-8', 'debian-10', 'debian-11-arm', 'debian-12-libcxx' ]
        version: [ '10.2.154.23', '10.8.168.25' ]
        include:
          - distro: 'gcc-4.9'
            version: '6.8.275.32'
          - distro: 'gcc-4.8'
            version: '6.8.275.32'
          - distro: 'alpine'
            version: '9.6.180.12'

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: build
        run: |
          docker build --build-arg v8_version=${{ matrix.version }} ${{ matrix.distro }} -t mybuild

      - name: copy
        run: |
          docker run -d --name myrun mybuild
          docker cp myrun:/v8-${{ matrix.version }}-static.tar.xz .
          docker stop myrun
          mv v8-${{ matrix.version }}-static.tar.xz v8-${{ matrix.version }}-${{ matrix.distro }}.tar.xz

      - name: store
        uses: actions/upload-artifact@v3
        with:
          name: v8-${{ matrix.version }}-${{ matrix.distro }}
          path: v8-${{ matrix.version }}-${{ matrix.distro }}.tar.xz

  release:
    runs-on: ubuntu-latest
    name: Store binaries as GitHub release
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts for deployment
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/v8-*.tar.xz
