on:
  push:

name: Building V8

jobs:
  build:
    runs-on: ubuntu-24.04${{matrix.arch=='arm64' && '-arm' || ''}}
    name: ${{ matrix.distro }} / ${{ matrix.arch }}

# V8 version from node-20: https://github.com/nodejs/node/blob/v20.x-staging-backport/deps/v8/include/v8-version.h

    strategy:
      fail-fast: false
      matrix:
        distro: [ 'rocky-8', 'debian-11', 'debian-12-libcxx']
        arch: [ 'amd64', 'arm64' ]

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        run: |
          docker build ${{ matrix.distro }} -t mybuild

      - name: copy
        run: |
          docker run -d --name myrun mybuild
          docker cp myrun:/v8-${{ matrix.version }}-static.tar.xz .
          docker stop myrun
          mv v8-${{ matrix.version }}-static.tar.xz v8-${{ matrix.version }}-${{ matrix.distro }}-${{ matrix.arch }}.tar.xz

      - name: store
        uses: actions/upload-artifact@v4
        with:
          name: v8-${{ matrix.version }}-${{ matrix.distro }}-${{ matrix.arch }}
          path: v8-${{ matrix.version }}-${{ matrix.distro }}-${{ matrix.arch }}.tar.xz

  release:
    runs-on: ubuntu-latest
    name: Store binaries as GitHub release
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts for deployment
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Recompress with gzip
        run: |
          mkdir assets;
          cp artifacts/*/v8-*.tar.xz assets/
          (cd assets; xz -dk *.xz; gzip *.tar)
      - name: Release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: assets/*
